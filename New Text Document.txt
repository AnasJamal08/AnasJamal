from queue import PriorityQueue
graph = {
  'A' : [[10,'B'],[8,'C']],
  'B' : [[5,'D'], [3,'F'],[2,'E']],
  'C' : [[5,'F']],
  'D' : [],
  'E' : [[2,'F']],
  'F' : []
}

heuristic={
    'A' : 10,
    'B' : 27,
    'C' : 25,
    'D' : 13,
    'E' : 9,
    'F' : 0
}

mygoal='D' 
visited=set()
def A_staric(visited, graph, startnode,goal,hn):  
    
    expque=PriorityQueue()
    path=[startnode]
    visited = set() 
    expque.put((0,startnode,startnode,0))
    
    while expque.qsize() > 0 :
        
        node=expque.get()
        huer=node[3]
        curcost=node[0]-huer
        curname=node[1]
        curpath=node[2]

        
        
        if curname not in visited:
            visited.add(curname)
            print('name:', curname, '\t gn:', curcost+huer)
            
            if curname==goal:
                print ('---Goal Found---' )
                print('Path Cost: ',curcost+huer,'Path Track: ',curpath )
                return
            
            suclist=graph[curname]
            for sucnode in suclist:
                if sucnode[1] not in visited:
                    gn=sucnode[0]+curcost+ hn[sucnode[1]]
                    st=''
                    st=node[2]+' '+sucnode[1]
                    expque.put((gn,sucnode[1],st,hn[sucnode[1]]))
                    

print("Following is the A*")
A_staric(visited, graph, 'A',mygoal,heuristic)